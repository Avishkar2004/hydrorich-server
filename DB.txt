-- TABLE'S

ALTER TABLE users ADD COLUMN role ENUM('user', 'admin') DEFAULT 'user';
UPDATE users SET role = 'admin' WHERE email = 'avishkarkakde2004@gmail.com';
-- ALTER TABLE users MODIFY id VARCHAR(255) NOT NULL DEFAULT (UUID());


CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    category VARCHAR(100),
    in_stock BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Product Variants table
CREATE TABLE product_variants (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    variant_name VARCHAR(255),
    unit VARCHAR(50), -- ml, litre, set, etc.
    quantity DECIMAL(10, 2),
    price DECIMAL(10, 2),
    discount_percent INT DEFAULT 0,
    is_available BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (product_id) REFERENCES products(id)
);


-- Dosages table (optional, only for variants that have dosage)
CREATE TABLE dosages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    variant_id INT,
    dosage_per_unit VARCHAR(255),
    usage_instructions TEXT,
    FOREIGN KEY (variant_id) REFERENCES product_variants(id)
);

-- Product Photos table (to support multiple images)
CREATE TABLE product_photos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    image_url VARCHAR(500),
    alt_text VARCHAR(255),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

INSERT INTO categories (name) VALUES ('plantgrowthregulator');
INSERT INTO categories (name) VALUES ('organicFertilizers');
INSERT INTO categories (name) VALUES ('micronutrient');
INSERT INTO categories (name) VALUES ('Insecticide');
INSERT INTO categories (name) VALUES ('Fungicide');


-- Cart table
CREATE TABLE cart (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255),
    product_id INT,
    variant_id INT,
    quantity INT NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    FOREIGN KEY (variant_id) REFERENCES product_variants(id) ON DELETE CASCADE
);

-- Wishlist table
CREATE TABLE wishlist (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255),
    product_id INT,
    variant_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    FOREIGN KEY (variant_id) REFERENCES product_variants(id) ON DELETE CASCADE
);

ALTER TABLE wishlist 
MODIFY COLUMN id VARCHAR(250) NOT NULL DEFAULT (UUID());


-- Orders table
CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    order_number VARCHAR(50) UNIQUE NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    status ENUM('pending', 'processing', 'shipped', 'delivered', 'cancelled') DEFAULT 'pending',
    payment_method VARCHAR(50) NOT NULL,
    payment_status ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
    shipping_address JSON NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


-- Order Items table
CREATE TABLE order_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    variant_id INT NOT NULL,
    quantity INT NOT NULL,
    price_per_unit DECIMAL(10, 2) NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    FOREIGN KEY (variant_id) REFERENCES product_variants(id) ON DELETE CASCADE
);



=====

CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    order_number VARCHAR(50) UNIQUE NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    currency VARCHAR(3) NOT NULL DEFAULT 'USD',
    status ENUM(
        'pending', 'confirmed', 'processing', 'shipped', 'out_for_delivery',
        'delivered', 'cancelled', 'returned', 'refunded'
    ) DEFAULT 'pending',
    payment_method VARCHAR(50) NOT NULL,
    payment_status ENUM(
        'pending', 'authorized', 'paid', 'failed', 'refunded', 'partially_refunded'
    ) DEFAULT 'pending',
    discount_amount DECIMAL(10, 2) DEFAULT 0.00,
    shipping_cost DECIMAL(10, 2) DEFAULT 0.00,
    tax_amount DECIMAL(10, 2) DEFAULT 0.00,
    shipping_address JSON NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

====


INserted Data :-
-- Insert products
INSERT INTO products (name, description, category, in_stock) VALUES
('Master Root Potassium Humate', 'A powerful potassium humate-based PGR.', 'Plant Growth Regulator', TRUE),
('Bayer Ambition', 'High-efficiency amino and fulvic acid blend for plant growth.', 'Plant Growth Promoter', TRUE);

-- Insert product variants
INSERT INTO product_variants (product_id, variant_name, unit, quantity, price, discount_percent, is_available) VALUES
-- Master Root Potassium Humate (product_id = 1)
(1, '1 Set; 250 gm x 2', 'gm', 500, 180.00, 15, TRUE),
(1, '2 Set; 250 gm x 4', 'gm', 750, 270.00, 18, FALSE),
(1, '3 Set; 250 gm x 6', 'gm', 1000, 350.00, 20, TRUE),
(1, '4 Set; 250 gm x 8', 'gm', 1250, 420.00, 22, TRUE),
(1, '5 Set; 250 gm x 10', 'gm', 2500, 800.00, 25, TRUE),

-- Bayer Ambition (product_id = 2)
(2, '250ml', 'ml', 250, 150.00, 5, TRUE),
(2, '500ml', 'ml', 500, 280.00, 7, TRUE),
(2, '1 Litre', 'litre', 1, 500.00, 10, TRUE),
(2, '2 Litre', 'litre', 2, 950.00, 12, TRUE),
(2, '5 Litre', 'litre', 5, 2200.00, 15, FALSE);

-- Insert dosage information for Bayer Ambition variants
-- Insert dosage information for Bayer Ambition variants
INSERT INTO dosages (variant_id, dosage_per_unit, usage_instructions) VALUES
(18, '1 acre per 250ml', 'Mix with 100L water and spray uniformly.'),
(19, '1.5 acres per 500ml', 'Mix with 150L water for best results.'),
(20, '2 acres per 1L', 'Apply during vegetative phase with irrigation.'),
(21, '4 acres per 2L', 'Use during flowering for optimal growth.'),
(22, '10 acres per 5L', 'Ideal for full-scale crop coverage.'),
(23, '1 acre per 250ml', 'Mix with 100L water and spray uniformly.'),
(24, '1.5 acres per 500ml', 'Mix with 150L water for best results.'),
(25, '2 acres per 1L', 'Apply during vegetative phase with irrigation.'),
(26, '4 acres per 2L', 'Use during flowering for optimal growth.'),
(27, '10 acres per 5L', 'Ideal for full-scale crop coverage.');

-- Insert product photos
INSERT INTO product_photos (product_id, image_url, alt_text) VALUES
-- Master Root Potassium Humate
(1, 'https://krushidukan.bharatagri.com/cdn/shop/files/YogdaanMasterRoot_2.webp?v=1713852073', 'Humate Photo 1'),
(1, 'https://krushidukan.bharatagri.com/cdn/shop/products/YogdaanMasterRoot.webp?v=1713852073', 'Humate Photo 2'),

-- Bayer Ambition
(2, 'https://krushidukan.bharatagri.com/cdn/shop/files/Bayer_Ambition_20fea0b7-7b6d-4353-a017-89f0204230f6.webp?v=1724482283', 'Bayer Photo 1'),
(2, 'https://krushidukan.bharatagri.com/cdn/shop/files/Bayer_Ambition_3_93a9be13-eaad-4337-892f-9f9787372180.webp?v=1735654648', 'Bayer Photo 2'),
(2, "https://cdn.shopify.com/s/files/1/0722/2059/files/ambition-fungicide-file-9106.webp?v=1743405549", "Bayer Photo 3")


===========

For organicFertilizers :-

INSERT INTO products (name, description, category, in_stock)
VALUES ('Organic Neem Cake Fertilizer', 'A natural organic fertilizer made from neem seeds. Helps improve soil fertility and controls nematodes.', 'organicFertilizers', TRUE);

INSERT INTO product_variants (product_id, variant_name, unit, quantity, price, discount_percent, is_available)
VALUES
(5, '1 kg Pack', 'kg', 1, 120.00, 10, TRUE),
(5, '5 kg Pack', 'kg', 5, 550.00, 15, TRUE),
(5, '10 kg Pack', 'kg', 10, 1000.00, 20, TRUE);


INSERT INTO dosages (variant_id, dosage_per_unit, usage_instructions)
VALUES
(31, '500g per plant', 'Mix into topsoil before watering. Use monthly for best results.'),
(32, '2kg per small tree', 'Apply around the root zone. Water thoroughly.'),
(33, '5kg per medium tree', 'Spread evenly and mix with soil. Repeat every 2 months.');



INSERT INTO product_photos (product_id, image_url, alt_text)
VALUES
(5, 'https://m.media-amazon.com/images/I/61w1QDBfHkL._AC_UF1000,1000_QL80_.jpg', 'Organic Neem Cake Front View'),
(5, 'https://m.media-amazon.com/images/I/511w4zIhPpL.jpg', 'Neem Cake Granules Closeup');


=======

For micronutrient :-

INSERT INTO products (name, description, category, in_stock)
VALUES (
  'GrowMic Micro Mix',
  'A balanced blend of essential micronutrients including Zinc, Iron, Manganese, and Boron for overall plant health.',
  'micronutrient',
  TRUE
);


INSERT INTO product_variants (product_id, variant_name, unit, quantity, price, discount_percent, is_available)
VALUES
(6, '250 gm Pack', 'gm', 250, 100.00, 5, TRUE),
(6, '500 gm Pack', 'gm', 500, 180.00, 10, TRUE),
(6, '1 kg Pack', 'kg', 1, 330.00, 15, TRUE),
(6, '2 kg Pack', 'kg', 2, 600.00, 20, TRUE);


INSERT INTO dosages (variant_id, dosage_per_unit, usage_instructions)
VALUES
(34, '250gm per acre', 'Mix with 100L of water and spray during early vegetative stage.'),
(35, '500gm per acre', 'Apply evenly with foliar spray. Repeat after 20 days.'),
(36, '1kg per 2 acres', 'Use with drip irrigation or spray in two splits.'),
(37, '2kg per 4 acres', 'Best for large farms. Mix well in water or compost and apply around root zone.');



INSERT INTO product_photos (product_id, image_url, alt_text)
VALUES
(6, 'https://m.media-amazon.com/images/I/511xvEOiNIL._SL1080_.jpg', 'GrowMic Micro Mix Front View'),
(6, 'https://m.media-amazon.com/images/I/61Nh2H+7ghL._SL1080_.jpg', 'GrowMic Micronutrient Contents'),
(6, 'https://m.media-amazon.com/images/I/61hXZ+lhLnL._SL1080_.jpg', 'GrowMic Packaging'),
(6, 'https://m.media-amazon.com/images/I/61BnmImHP9L._SL1080_.jpg', 'GrowMic Packaging'),
(6, 'https://m.media-amazon.com/images/I/810g4p2Ek4L._SL1500_.jpg', 'GrowMic Packaging');


=====

 For Insecticide:-

 INSERT INTO products (name, description, category, in_stock)
VALUES (
  'CropGuard Imida 70WG',
  'A powerful systemic insecticide based on Imidacloprid 70% WG formulation. Effective against sucking pests in various crops.',
  'Insecticide',
  TRUE
);

INSERT INTO product_variants (product_id, variant_name, unit, quantity, price, discount_percent, is_available)
VALUES
(7, '100 gm Pack', 'gm', 100, 220.00, 5, TRUE),
(7, '250 gm Pack', 'gm', 250, 500.00, 10, TRUE),
(7, '500 gm Pack', 'gm', 500, 950.00, 12, TRUE),
(7, '1 kg Pack', 'kg', 1, 1750.00, 15, TRUE);


INSERT INTO dosages (variant_id, dosage_per_unit, usage_instructions)
VALUES
(38, '100gm per acre', 'Mix with 200L water and apply on affected areas early morning or late evening.'),
(39, '250gm per 2 acres', 'Spray on both sides of leaves. Avoid during rain.'),
(40, '500gm per 4 acres', 'Apply uniformly for maximum absorption.'),
(41, '1kg per 8 acres', 'Use with high-pressure sprayer. Repeat every 15-20 days if needed.');


INSERT INTO product_photos (product_id, image_url, alt_text)
VALUES
(7, 'https://agribegri.com/admin/images/prod_image/9144654751740463091.webp', 'CropGuard Imida 70WG Front View'),
(7, 'https://agribegri.com/admin/images/prod_image/de935b06db9b8cadb57c428fdacd80b5-02-25-25-11-27-39.webp', 'CropGuard Pouch Back View'),
(7, 'https://agribegri.com/admin/images/prod_image/a54259ba9e3adfd03f84a8c1f56dc31c-02-25-25-11-27-47.webp', 'CropGuard Imida Granules Closeup'),
(7, 'https://agribegri.com/admin/images/prod_image/55b61e283aa6f0c191905374e69686da-02-25-25-11-27-55.webp', 'CropGuard Imida Granules Closeup'),
(7, 'https://agribegri.com/admin/images/prod_image/8f377770fb5042505e4c14d71fa1aa90-02-25-25-11-28-03.webp', 'CropGuard Imida Granules Closeup');


=============

For Fungicide :-

INSERT INTO products (name, description, category, in_stock)
VALUES (
  'ShieldMax Azoxy Plus',
  'Broad-spectrum fungicide combining Azoxystrobin and Difenoconazole for effective control of fungal diseases in crops like rice, wheat, and vegetables.',
  'Fungicide',
  TRUE
);

INSERT INTO product_variants (product_id, variant_name, unit, quantity, price, discount_percent, is_available)
VALUES
(8, '100 ml Bottle', 'ml', 100, 250.00, 5, TRUE),
(8, '250 ml Bottle', 'ml', 250, 580.00, 8, TRUE),
(8, '500 ml Bottle', 'ml', 500, 1050.00, 10, TRUE),
(8, '1 Litre Bottle', 'litre', 1, 1980.00, 12, TRUE);



INSERT INTO dosages (variant_id, dosage_per_unit, usage_instructions)
VALUES
(42, '100ml per acre', 'Mix with 200L water. Apply at early disease symptoms for best control.'),
(43, '250ml per 2.5 acres', 'Ensure uniform coverage. Avoid spraying during rain.'),
(44, '500ml per 5 acres', 'Use during flowering stage for disease resistance.'),
(45, '1L per 10 acres', 'Apply in early morning or evening. Repeat every 10–15 days as needed.');


INSERT INTO product_photos (product_id, image_url, alt_text)
VALUES
(8, 'https://krushidukan.bharatagri.com/cdn/shop/files/Aimco_Azoxy_Plus.webp?v=1742184809', 'ShieldMax Azoxy Plus Bottle Front');




    SELECT 
      p.id AS product_id,
      p.name AS product_name,
      p.description,
      p.in_stock,
      pv.id AS variant_id,
      pv.variant_name,
      pv.unit,
      pv.quantity,
      pv.price,
      pv.discount_percent,
      pv.is_available,
      d.dosage_per_unit,
      d.usage_instructions,
      (
      SELECT ph.image_url
      FROM product_photos ph
      WHERE ph.product_id = p.id
      ORDER BY ph.id ASC
      LIMIT 1
      ) AS image_url
    FROM products p
    LEFT JOIN product_variants pv ON p.id = pv.product_id
    LEFT JOIN dosages d ON pv.id = d.variant_id
    LEFT JOIN product_photos ph ON p.id = ph.product_id
    WHERE LOWER(p.category) = 'plantgrowthregulator'
  `;

============

  Based on the codebase I've seen, this appears to be an e-commerce project for agricultural/hydroponic products. Let me outline what you can work on:
User Authentication & Profile
Implement email verification
Add password reset functionality
Enhance user profile with:
Address management
Order history
Saved payment methods
Profile picture upload
Product Management
Add product search with filters
Implement product categories and subcategories
Add product reviews and ratings
Product comparison feature
Stock management system
Shopping Experience
Improve cart functionality
Implement product recommendations
Order tracking
Multiple shipping options
Order status updates
Invoice generation === Done
Return/refund management
Payment Integration
Add multiple payment gateways
Implement secure payment processing
Add wallet system
Subscription-based purchases
Admin Dashboard
Sales analytics
Inventory management
User management
Order management
Product management
Discount/coupon management
Mobile Responsiveness
Optimize for mobile devices
Implement mobile-specific UI improvements
Performance Optimization
Implement caching
Optimize database queries
Add image optimization
Implement lazy loading
Security Enhancements
Add rate limiting === Done
Implement CSRF protection
Add input validation
Secure API endpoints
Additional Features
Live chat support
Product notifications
Social media integration
Blog/News section
FAQ section === Done


=========

Technology Should I Use :-

Based on your current project structure and modern best practices, here are the recommended technologies you could use:
Frontend Technologies:
Core Framework & Language:
React 19 (Latest version)
TypeScript
Vite (for faster development and building)
Styling & UI:
Tailwind CSS (for responsive design)
Framer Motion (for animations)
Shadcn/ui or Material-UI (for pre-built components)
React Icons or Lucide Icons
State Management:
Zustand (lightweight state management)
React Query (for server state management)
Form Handling:
React Hook Form
Zod (for form validation)
Backend Technologies:
Core:
Node.js with Express.js
TypeScript (for type safety)
Database:
MySQL (current) or PostgreSQL (more features)
Prisma (as ORM for better type safety and database management)
Authentication:
JWT (JSON Web Tokens)
Passport.js
OAuth 2.0 (Google, GitHub)
API Documentation:
Swagger/OpenAPI
Postman (for API testing)
DevOps & Tools:
Version Control:
Git
GitHub/GitLab
Deployment:
Vercel (for frontend)
Railway or Render (for backend)
AWS/DigitalOcean (for production)
Development Tools:
ESLint (code linting)
Prettier (code formatting)
Husky (git hooks)
Jest (testing)
Monitoring & Analytics:
Google Analytics
Vercel Analytics
Additional Features:
File Handling:
AWS S3 or Cloudinary (for image storage)
Multer (for file uploads)
Email Services:
SendGrid or Nodemailer
Email templates with MJML
PDF Generation:
PDFKit (current) or React-PDF
Real-time Features:
Socket.io (if needed)
Pusher (for real-time updates)
Payment Integration:
Stripe
PayPal
Caching:
Redis (for session management and caching) === Done
React Query (for frontend caching)
Security:
Helmet.js (security headers)
CORS
Rate limiting
Input sanitization
Testing:
Jest
React Testing Library
Supertest (for API testing)
CI/CD:
GitHub Actions
Docker (for containerization)
Docker Compose (for local development)
Performance:
Compression middleware === Done
Image optimization
Code splitting === Done
Lazy loading 